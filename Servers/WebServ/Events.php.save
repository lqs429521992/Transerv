<?php
/**
 * This file is part of workerman.
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the MIT-LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @author walkor<walkor@workerman.net>
 * @copyright walkor<walkor@workerman.net>
 * @link http://www.workerman.net/
 * @license http://www.opensource.org/licenses/mit-license.php MIT License
 */

/**
 * 用于检测业务代码死循环或者长时间阻塞等问题
 * 如果发现业务卡死，可以将下面declare打开（去掉//注释），并执行php start.php reload
 * 然后观察一段时间workerman.log看是否有process_timeout异常
 */
//declare(ticks=1);

use \GatewayWorker\Lib\Gateway;
use Workerman\Connection\AsyncTcpConnection;
use Workerman\Connection\MysqlConnection;
/**
 * 主逻辑
 * 主要是处理 onConnect onMessage onClose 三个方法
 * onConnect 和 onClose 如果不需要可以不用实现并删除
 */
class Events
{

    public static $mysql_conn = null;
    public static function getConnection(){
        if (self::$mysql_conn instanceof MysqlConnection) {
            return self::$mysql_conn;
        }
        self::$mysql_conn=new MysqlConnection('127.0.0.1',
            '3306',
            'root',
            'Keepao2018',
            'keepao');
        echo "[".date("Y/m/d H:i:s")."]    『WebServ』 已建立数据库连接!\n";
        return self::$mysql_conn;
    }
    public static function onMessage($client_id, $message) {
        echo "[".date("Y/m/d H:i:s")."]    『WebServ』 接收消息: ".$message."\n";
        /*↓↓↓将接收到的json字符串解析为数组↓↓↓*/
        $msgarr=json_decode($message);
        if (!is_null($msgarr)) {
            if ($msgarr->type=='unlock')/*解锁{"type":"unlock","usr_id":"429521992","head_img":"url","nickname":"snowsky","mac":"12345678","key":"45683"}*/{
                $sql="SELECT dev_key from tb_dev WHERE devID ='".$msgarr->mac."'";
                $result=self::getConnection()->query($sql);
                if ($result[0]['dev_key']==$msgarr->key){
                    try {
                        $tcp_conn = new AsyncTcpConnection('tcp://127.0.0.1:8282');
                        $tcp_conn->connect();
                        $tcp_conn->send('{"unlock":"'.$msgarr->mac.'","usr_id":"'.$msgarr->usr_id.'","head_img":"'.$msgarr->head_img.'","nickname":"'.$msgarr->nickname.'"}');
                        $tcp_conn->close();
                    } catch (Exception $e) {
                    }
                    $sql="UPDATE tb_dev set usrID ='".$client_id."' WHERE devID ='".$msgarr->mac."' ";
                    self::getConnection()->query($sql);
                }
            
            if ($msgarr->type=="send"){
                Gateway::sendToClient($msgarr->usrID,'{"unlock":"success"}');
		echo "解锁状态成功发送给".$msgarr->usrID."\n";
            }
            if ($msgarr->type=='lock')/*锁定{"type":"lock","mac":"12345678"}*/{
                try {
                    $tcp_conn = new AsyncTcpConnection('tcp://127.0.0.1:8282');
                    $tcp_conn->connect();
                    $tcp_conn->send('{"lock":"'.$msgarr->mac.'"}');
                    $tcp_conn->close();
                } catch (Exception $e) {
                }
            }
            if ($msgarr->type=='status')/*状态{"type":"status","mac":"12345678"}*/{
                $sql="SELECT dev_status from tb_dev WHERE devID ='".$msgarr->mac."'";
                $result=self::getConnection()->query($sql);
                Gateway::sendToClient($client_id,'{"dev_status":"'.$result[0]['dev_status'].'"}');
            }
        }
    }

}
